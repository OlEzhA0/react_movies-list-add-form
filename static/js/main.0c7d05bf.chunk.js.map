{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","imagePattern","urlPattern","imdbIdPattern","state","movieTitle","movieDescr","imageUrl","movieUrl","titleErr","descriptionErr","imageUrlErr","movieUrlErr","setTitle","e","letter","target","value","replace","setState","titleLengthComplet","length","setDescription","descriptionLengthComplete","setImageUrl","test","setMovieUrl","movieUrlPatternComplete","newimdbId","match","split","slice","join","validation","submitMovie","addMovie","props","reset","this","onSubmit","preventDefault","type","placeholder","onChange","onClick","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c7d05bf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  // eslint-disable-next-line max-len\n  imagePattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  urlPattern = /https:\\/\\/www.imdb.com.title\\/(tt.+)\\/\\?.*/;\n\n  imdbIdPattern = /\\/tt.+\\//;\n\n  state = {\n    movieTitle: '',\n    movieDescr: '',\n    imageUrl: '',\n    movieUrl: '',\n    imdbId: '',\n    titleErr: false,\n    descriptionErr: false,\n    imageUrlErr: false,\n    movieUrlErr: false,\n  };\n\n  setTitle = (e) => {\n    const letter = e.target.value.replace(/^ /, '');\n\n    this.setState(() => ({ movieTitle: letter }),\n      () => this.titleLengthComplet());\n  }\n\n  titleLengthComplet = () => {\n    if (this.state.movieTitle.length >= 3) {\n      this.setState({ titleErr: false });\n    }\n  }\n\n  setDescription = (e) => {\n    this.setState(({ movieDescr: e.target.value }),\n      () => this.descriptionLengthComplete());\n  }\n\n  descriptionLengthComplete = () => {\n    if (this.state.movieDescr.length >= 10) {\n      this.setState(() => ({ descriptionErr: false }));\n    }\n  }\n\n  setImageUrl = (e) => {\n    this.setState(({ imageUrl: e.target.value }), () => {\n      if (this.imagePattern.test(this.state.imageUrl)) {\n        this.setState(() => ({ imageUrlErr: false }));\n      }\n    });\n  }\n\n  setMovieUrl = (e) => {\n    this.setState(({ movieUrl: e.target.value }),\n      () => this.movieUrlPatternComplete());\n  }\n\n  movieUrlPatternComplete = () => {\n    const { movieUrl } = this.state;\n\n    if (this.urlPattern.test(movieUrl)) {\n      const movieId = movieUrl.match(this.imdbIdPattern);\n      const newimdbId = movieId[0].split('').slice(1, -1).join('');\n\n      this.setState(() => ({\n        movieUrlErr: false, imdbId: newimdbId,\n      }));\n    }\n  }\n\n  validation = () => {\n    const {\n      movieTitle, movieDescr, imageUrl, movieUrl,\n    } = this.state;\n\n    this.setState(() => {\n      let titleErr = false;\n      let descriptionErr = false;\n      let imageUrlErr = false;\n      let movieUrlErr = false;\n\n      if (movieTitle.length < 3) {\n        titleErr = true;\n      }\n\n      if (movieDescr.length < 10) {\n        descriptionErr = true;\n      }\n\n      if (!this.imagePattern.test(imageUrl)) {\n        imageUrlErr = true;\n      }\n\n      if (!this.urlPattern.test(movieUrl)) {\n        movieUrlErr = true;\n      }\n\n      return {\n        titleErr, descriptionErr, imageUrlErr, movieUrlErr,\n      };\n    }, () => {\n      if (!this.state.titleErr && !this.state.descriptionErr\n        && !this.state.imageUrlErr && !this.state.movieUrlErr) {\n        this.submitMovie();\n      }\n    });\n  }\n\n  submitMovie = () => {\n    const {\n      movieTitle, movieDescr, imageUrl, movieUrl, imdbId,\n    } = this.state;\n\n    const { addMovie } = this.props;\n\n    const newMovie = {\n      title: movieTitle,\n      description: movieDescr,\n      imgUrl: imageUrl,\n      imdbUrl: movieUrl,\n      imdbId,\n    };\n\n    addMovie(newMovie);\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState(() => ({\n      movieTitle: '',\n      movieDescr: '',\n      imageUrl: '',\n      movieUrl: '',\n      imdbId: '',\n    }));\n  }\n\n  render() {\n    const {\n      movieTitle, movieDescr, imageUrl, movieUrl,\n      titleErr, descriptionErr, imageUrlErr, movieUrlErr,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <label className=\"label\">\n          {' '}\n          Write movie title\n          <input\n            type=\"text\"\n            className={titleErr ? 'input__err input' : 'input'}\n            placeholder=\"Title\"\n            value={movieTitle}\n            onChange={this.setTitle}\n          />\n          {titleErr\n            && <span className=\"error\">Invalid title</span>\n          }\n        </label>\n        <label className=\"label textarea__label\">\n          {' '}\n          Write movie description\n          <textarea\n            type=\"text\"\n            className={descriptionErr\n              ? 'input__err textarea textarea__no-change'\n              : 'textarea textarea__no-change'}\n            placeholder=\"Description\"\n            value={movieDescr}\n            onChange={this.setDescription}\n          />\n          {descriptionErr\n            && <span className=\"error\">Invalid description</span>\n          }\n        </label>\n        <label className=\"label\">\n          {' '}\n          Paste iamge URL\n          <input\n            type=\"text\"\n            className=\"input input__title\"\n            placeholder=\"URL\"\n            value={imageUrl}\n            onChange={this.setImageUrl}\n          />\n          {imageUrlErr\n            && <span className=\"error\">Invalid URL</span>\n          }\n        </label>\n        <label className=\"label\">\n          Paste movie URL (from\n          {' '}\n          <a\n            href=\"https://www.imdb.com/?ref_=nv_home\"\n          >\n            IMDB\n          </a>\n          )\n          <input\n            type=\"text\"\n            className=\"input input__title\"\n            placeholder=\"URL\"\n            value={movieUrl}\n            onChange={this.setMovieUrl}\n          />\n          {movieUrlErr && (\n            <span className=\"error\">Invalid URL</span>\n          )}\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"button\"\n          onClick={this.validation}\n          disabled={\n            titleErr\n            || descriptionErr\n            || movieUrlErr\n            || imageUrlErr\n          }\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({ movies: [...state.movies, movie] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}